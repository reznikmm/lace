--  SPDX-FileCopyrightText: 2021 Max Reznik <reznikmm@gmail.com>
--
--  SPDX-License-Identifier: MIT
-------------------------------------------------------------

with Program.Elements;

package Lace.Element_Flat_Kinds is
   pragma Pure;

   type Element_Flat_Kind is
     (Pragma_Kind,
      Defining_Name_Kind,
      Defining_Identifier_Kind,
      Defining_Character_Literal_Kind,
      Defining_Operator_Symbol_Kind,
      Defining_Expanded_Name_Kind,
      Declaration_Kind,
      Type_Declaration_Kind,
      Task_Type_Declaration_Kind,
      Protected_Type_Declaration_Kind,
      Subtype_Declaration_Kind,
      Object_Declaration_Kind,
      Single_Task_Declaration_Kind,
      Single_Protected_Declaration_Kind,
      Number_Declaration_Kind,
      Enumeration_Literal_Specification_Kind,
      Discriminant_Specification_Kind,
      Component_Declaration_Kind,
      Loop_Parameter_Specification_Kind,
      Generalized_Iterator_Specification_Kind,
      Element_Iterator_Specification_Kind,
      Procedure_Declaration_Kind,
      Function_Declaration_Kind,
      Parameter_Specification_Kind,
      Procedure_Body_Declaration_Kind,
      Function_Body_Declaration_Kind,
      Return_Object_Specification_Kind,
      Package_Declaration_Kind,
      Package_Body_Declaration_Kind,
      Object_Renaming_Declaration_Kind,
      Exception_Renaming_Declaration_Kind,
      Procedure_Renaming_Declaration_Kind,
      Function_Renaming_Declaration_Kind,
      Package_Renaming_Declaration_Kind,
      Generic_Package_Renaming_Declaration_Kind,
      Generic_Procedure_Renaming_Declaration_Kind,
      Generic_Function_Renaming_Declaration_Kind,
      Task_Body_Declaration_Kind,
      Protected_Body_Declaration_Kind,
      Entry_Declaration_Kind,
      Entry_Body_Declaration_Kind,
      Entry_Index_Specification_Kind,
      Procedure_Body_Stub_Kind,
      Function_Body_Stub_Kind,
      Package_Body_Stub_Kind,
      Task_Body_Stub_Kind,
      Protected_Body_Stub_Kind,
      Exception_Declaration_Kind,
      Choice_Parameter_Specification_Kind,
      Generic_Package_Declaration_Kind,
      Generic_Procedure_Declaration_Kind,
      Generic_Function_Declaration_Kind,
      Package_Instantiation_Kind,
      Procedure_Instantiation_Kind,
      Function_Instantiation_Kind,
      Formal_Object_Declaration_Kind,
      Formal_Type_Declaration_Kind,
      Formal_Procedure_Declaration_Kind,
      Formal_Function_Declaration_Kind,
      Formal_Package_Declaration_Kind,
      Definition_Kind,
      Type_Definition_Kind,
      Subtype_Indication_Kind,
      Constraint_Kind,
      Component_Definition_Kind,
      Discrete_Range_Kind,
      Discrete_Subtype_Indication_Kind,
      Discrete_Range_Attribute_Reference_Kind,
      Discrete_Simple_Expression_Range_Kind,
      Unknown_Discriminant_Part_Kind,
      Known_Discriminant_Part_Kind,
      Record_Definition_Kind,
      Null_Component_Kind,
      Variant_Part_Kind,
      Variant_Kind,
      Others_Choice_Kind,
      Anonymous_Access_Definition_Kind,
      Anonymous_Access_To_Object_Kind,
      Anonymous_Access_To_Procedure_Kind,
      Anonymous_Access_To_Function_Kind,
      Private_Type_Definition_Kind,
      Private_Extension_Definition_Kind,
      Incomplete_Type_Definition_Kind,
      Task_Definition_Kind,
      Protected_Definition_Kind,
      Formal_Type_Definition_Kind,
      Aspect_Specification_Kind,
      Real_Range_Specification_Kind,
      Expression_Kind,
      Numeric_Literal_Kind,
      String_Literal_Kind,
      Identifier_Kind,
      Operator_Symbol_Kind,
      Character_Literal_Kind,
      Explicit_Dereference_Kind,
      Infix_Operator_Kind,
      Function_Call_Kind,
      Indexed_Component_Kind,
      Slice_Kind,
      Selected_Component_Kind,
      Attribute_Reference_Kind,
      Record_Aggregate_Kind,
      Extension_Aggregate_Kind,
      Array_Aggregate_Kind,
      Short_Circuit_Operation_Kind,
      Membership_Test_Kind,
      Null_Literal_Kind,
      Parenthesized_Expression_Kind,
      Raise_Expression_Kind,
      Type_Conversion_Kind,
      Qualified_Expression_Kind,
      Allocator_Kind,
      Case_Expression_Kind,
      If_Expression_Kind,
      Quantified_Expression_Kind,
      Association_Kind,
      Discriminant_Association_Kind,
      Record_Component_Association_Kind,
      Array_Component_Association_Kind,
      Parameter_Association_Kind,
      Formal_Package_Association_Kind,
      Statement_Kind,
      Null_Statement_Kind,
      Assignment_Statement_Kind,
      If_Statement_Kind,
      Case_Statement_Kind,
      Loop_Statement_Kind,
      While_Loop_Statement_Kind,
      For_Loop_Statement_Kind,
      Block_Statement_Kind,
      Exit_Statement_Kind,
      Goto_Statement_Kind,
      Call_Statement_Kind,
      Simple_Return_Statement_Kind,
      Extended_Return_Statement_Kind,
      Accept_Statement_Kind,
      Requeue_Statement_Kind,
      Delay_Statement_Kind,
      Terminate_Alternative_Statement_Kind,
      Select_Statement_Kind,
      Abort_Statement_Kind,
      Raise_Statement_Kind,
      Code_Statement_Kind,
      Path_Kind,
      Elsif_Path_Kind,
      Case_Path_Kind,
      Select_Path_Kind,
      Case_Expression_Path_Kind,
      Elsif_Expression_Path_Kind,
      Clause_Kind,
      Use_Clause_Kind,
      With_Clause_Kind,
      Representation_Clause_Kind,
      Component_Clause_Kind,
      Derived_Type_Kind,
      Derived_Record_Extension_Kind,
      Enumeration_Type_Kind,
      Signed_Integer_Type_Kind,
      Modular_Type_Kind,
      Root_Type_Kind,
      Floating_Point_Type_Kind,
      Ordinary_Fixed_Point_Type_Kind,
      Decimal_Fixed_Point_Type_Kind,
      Unconstrained_Array_Type_Kind,
      Constrained_Array_Type_Kind,
      Record_Type_Kind,
      Interface_Type_Kind,
      Object_Access_Type_Kind,
      Procedure_Access_Type_Kind,
      Function_Access_Type_Kind,
      Formal_Private_Type_Definition_Kind,
      Formal_Derived_Type_Definition_Kind,
      Formal_Discrete_Type_Definition_Kind,
      Formal_Signed_Integer_Type_Definition_Kind,
      Formal_Modular_Type_Definition_Kind,
      Formal_Floating_Point_Definition_Kind,
      Formal_Ordinary_Fixed_Point_Definition_Kind,
      Formal_Decimal_Fixed_Point_Definition_Kind,
      Formal_Unconstrained_Array_Type_Kind,
      Formal_Constrained_Array_Type_Kind,
      Formal_Access_Type_Kind,
      Formal_Object_Access_Type_Kind,
      Formal_Procedure_Access_Type_Kind,
      Formal_Function_Access_Type_Kind,
      Formal_Interface_Type_Kind,
      Access_Type_Kind,
      Range_Attribute_Reference_Kind,
      Simple_Expression_Range_Kind,
      Digits_Constraint_Kind,
      Delta_Constraint_Kind,
      Index_Constraint_Kind,
      Discriminant_Constraint_Kind,
      Attribute_Definition_Clause_Kind,
      Enumeration_Representation_Clause_Kind,
      Record_Representation_Clause_Kind,
      At_Clause_Kind,
      Exception_Handler_Kind);

   function Flat_Kind (Element : not null Program.Elements.Element_Access)
     return Element_Flat_Kind;

end Lace.Element_Flat_Kinds;
